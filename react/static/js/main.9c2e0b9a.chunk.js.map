{"version":3,"sources":["components/AddAppointments.js","components/SortButton.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","assertThisInitialized","handleAdd","e","preventDefault","tempApt","props","addAppointment","setState","toggleForm","target","value","name","defineProperty","react_default","a","createElement","className","formDisplay","onClick","fa","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SortButton","selected","selectedField","field","sortClicked","clicked","orderAsc","href","title","SearchAppointments","aria-label","data-toggle","aria-haspopup","aria-expanded","components_SortButton","orderBy","orderByChanged","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","dist_default","date","parse","format","App","myAppointments","lastIndex","apt","tempApts","unshift","sortBy","ascending","without","_this2","fetch","then","response","json","result","apts","order","_this3","filteredApts","sort","b","toLowerCase","components_AddAppointments","components_SearchAppointments","components_ListAppointments","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c2e0b9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FaPlus } from 'react-icons/fa';\n\nclass AddAppointments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      petName: '',\n      ownerName: '',\n      aptDate: '',\n      aptTime: '',\n      aptNotes: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n    let tempApt = {\n      petName: this.state.petName,\n      ownerName: this.state.ownerName,\n      aptDate: this.state.aptDate + ' ' + this.state.aptTime,\n      aptNotes: this.state.aptNotes\n    };\n\n    this.props.addAppointment(tempApt);\n\n    this.setState({\n      petName: '',\n      ownerName: '',\n      aptDate: '',\n      aptTime: '',\n      aptNotes: ''\n    });\n    this.props.toggleForm();\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          'card textcenter mt-3 ' +\n          (this.props.formDisplay ? '' : 'add-appointment')\n        }\n      >\n        <div\n          className=\"apt-addheading card-header bg-primary text-white\"\n          onClick={this.props.toggleForm}\n        >\n          <FaPlus /> Add Appointment\n        </div>\n\n        <div className=\"card-body\">\n          <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\n            <div className=\"form-group form-row\">\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"petName\"\n                readOnly\n              >\n                Pet Name\n              </label>\n              <div className=\"col-md-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"petName\"\n                  placeholder=\"Pet's Name\"\n                  value={this.state.petName}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row\">\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"ownerName\"\n              >\n                Pet Owner\n              </label>\n              <div className=\"col-md-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"ownerName\"\n                  placeholder=\"Owner's Name\"\n                  value={this.state.ownerName}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row\">\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"aptDate\"\n              >\n                Date\n              </label>\n              <div className=\"col-md-4\">\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  name=\"aptDate\"\n                  id=\"aptDate\"\n                  value={this.state.aptDate}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"aptTime\"\n              >\n                Time\n              </label>\n              <div className=\"col-md-4\">\n                <input\n                  type=\"time\"\n                  className=\"form-control\"\n                  name=\"aptTime\"\n                  id=\"aptTime\"\n                  value={this.state.aptTime}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row\">\n              <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                Apt. Notes\n              </label>\n              <div className=\"col-md-10\">\n                <textarea\n                  className=\"form-control\"\n                  rows=\"4\"\n                  cols=\"50\"\n                  name=\"aptNotes\"\n                  id=\"aptNotes\"\n                  placeholder=\"Appointment Notes\"\n                  value={this.state.aptNotes}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row mb-0\">\n              <div className=\"offset-md-2 col-md-10\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary d-block ml-auto\"\n                >\n                  Add Appointment\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddAppointments;\n","import React, { Component } from 'react';\nimport { FaSortDown, FaSortUp} from 'react-icons/fa';\n\nclass SortButton extends Component {\n\n    constructor(props){\n        super();\n        this.state = {\n            selected : (props.selectedField === props.field)\n        };\n        this.sortClicked = this.sortClicked.bind(this);\n        \n    }\n    sortClicked(e){\n        this.setState({\n            selected : true\n        })\n        this.props.clicked(this.props.field, this.state.selected ? !this.props.orderAsc:this.props.orderAsc );\n        \n    }\n\n    render(){\n        return (\n            <button className={\n                'sort-by dropdown-item '+\n                (this.props.selectedField === this.props.field ? 'active':'')\n            } href=\"#\" onClick={this.sortClicked}>{this.props.title} {this.props.orderAsc ? <FaSortUp/> : <FaSortDown/> }</button>\n            \n        );\n    }\n}\nexport default SortButton;","import React, { Component } from 'react';\nimport SortButton from './SortButton';\n\nclass SearchAppointments extends Component {\n  render() {\n    return (\n      <div className=\"search-appointments row justify-content-center my-4\">\n        <div className=\"col-md-6\">\n          <div className=\"input-group\">\n            <input\n              id=\"SearchApts\"\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Search Appointments\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Sort by: <span className=\"caret\" />\n              </button>\n\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                <SortButton title=\"Pet Name\" \n                            field='petName' \n                            selectedField={this.props.orderBy} \n                            orderAsc={this.props.orderAsc} \n                            clicked={this.props.orderByChanged} \n                            />\n              \n                <SortButton title=\"Date\" \n                            field='aptDate' \n                            selectedField={this.props.orderBy} \n                            orderAsc={this.props.orderAsc}\n                            clicked={this.props.orderByChanged} \n                             />\n                <SortButton title=\"Owner\" \n                            field='ownerName' \n                            selectedField={this.props.orderBy} \n                            orderAsc={this.props.orderAsc} \n                            clicked={this.props.orderByChanged}\n                            />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchAppointments;\n","import React, { Component } from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport Moment from 'react-moment';\n\nclass ListAppointments extends Component {\n  render() {\n    return (\n      <div className=\"appointment-list item-list mb-3\">\n        {this.props.appointments.map(item => (\n          <div className=\"pet-item col media py-3\" key={item.aptId}>\n            <div className=\"mr-3\">\n              <button\n                className=\"pet-delete btn btn-sm btn-danger\"\n                onClick={() => this.props.deleteAppointment(item)}>\n                <FaTimes />\n              </button>\n            </div>\n\n            <div className=\"pet-info media-body\">\n              <div className=\"pet-head d-flex\">\n                <span className=\"pet-name\">{item.petName}</span>\n                <span className=\"apt-date ml-auto\">\n                  <Moment\n                    date={item.aptDate}\n                    parse=\"YYYY-MM-dd hh:mm\"\n                    format=\"MMM-D h:mma\"\n                  />\n                </span>\n              </div>\n\n              <div className=\"owner-name\">\n                <span className=\"label-item\">Owner: </span>\n                <span>{item.ownerName}</span>\n              </div>\n              <div className=\"apt-notes\">{item.aptNotes}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default ListAppointments;\n","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport AddAppointments from './AddAppointments';\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\n\nimport { without } from 'lodash';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy: 'ownerName',\n      orderAsc: true,\n      lastIndex: 0\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.orderByChanged = this.orderByChanged.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    });\n  }\n\n  orderByChanged(sortBy, ascending){\n    this.setState({\n      orderBy : sortBy,\n      orderAsc : ascending\n    });\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  componentDidMount() {\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(result => {\n        const apts = result.map(item => {\n          item.aptId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        });\n        this.setState({\n          myAppointments: apts\n        });\n      });\n  }\n\n  render() {\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if (this.state.orderAsc) {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts.sort((a, b) => {\n      if (\n        a[this.state.orderBy].toLowerCase() <\n        b[this.state.orderBy].toLowerCase()\n      ) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments\n                  formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addAppointment={this.addAppointment}\n                />\n                <SearchAppointments orderByChanged={this.orderByChanged} \n                                  orderBy={this.state.orderBy} \n                                  orderAsc={this.state.orderAsc} />\n                <ListAppointments\n                  appointments={filteredApts}\n                  deleteAppointment={this.deleteAppointment}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}